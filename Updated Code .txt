SidebarItems code :

import { ReactElement } from "react";

interface sidebaricons {
    text: String;
    Icons: ReactElement;
    type: "twitter" | "youtube" | "document";
    onClick: (type: "twitter" | "youtube" | "document") => void;
    isSelected: boolean;
}

export function SidebarItems({ text, Icons, type, onClick, isSelected }: sidebaricons) {
    return (
        <div 
            className={`flex pl-6 font-normal text-justify border-t-gray-300 p-2 cursor-pointer hover:bg-gray-200 ${
                isSelected ? 'bg-gray-200 text-blue-600' : 'text-gray-500'
            }`}
            onClick={() => onClick(type)}
        >
            <div className="px-3">
                {Icons}
            </div>
            <div className="text-lg">
                {text}
            </div>
        </div>
    );
}

Sidebar code : 

import { SidebarItems } from "./SidebarItems"
import { TwitterIcon } from "../../icons/twitterIcon"
import { YoutubeIcon } from "../../icons/youtubeIcon"
import { Logo } from "../../icons/Logo"
import { TextIcon } from "../../icons/textIcon"

interface SidebarProps {
    selectedType: string | null;
    onTypeSelect: (type: "twitter" | "youtube" | "document" | null) => void;
}

export function Sidebar({ selectedType, onTypeSelect }: SidebarProps) {
    return (
        <div className="h-full w-72 border-gray-300 border-r-2 fixed bg-white font-bold text-2xl">
            <div className="flex pt-8 border-b-2 pb-5 border-gray-200">
                <div className="font-bold text-2xl pl-9 flex text-blue-600 px-1.5">
                    <Logo />
                </div>
                Brainly
            </div>

            <div className="pt-5 pl-4">
                <SidebarItems 
                    text="Twitter" 
                    Icons={<TwitterIcon />} 
                    type="twitter"
                    onClick={(type) => onTypeSelect(selectedType === type ? null : type)}
                    isSelected={selectedType === "twitter"}
                />
                <SidebarItems 
                    text="Youtube" 
                    Icons={<YoutubeIcon />} 
                    type="youtube"
                    onClick={(type) => onTypeSelect(selectedType === type ? null : type)}
                    isSelected={selectedType === "youtube"}
                />
                <SidebarItems 
                    text="Document" 
                    Icons={<TextIcon />} 
                    type="document"
                    onClick={(type) => onTypeSelect(selectedType === type ? null : type)}
                    isSelected={selectedType === "document"}
                />
            </div>
        </div>
    );
}
Dashboard : 

import { Button } from '../components/UI/button'
import '../App.css'
import { PlusIcon } from '../icons/plus'
import { ShareIcon } from '../icons/share'
import { CardComponent } from '../components/Card'
import { CreateContentModal } from '../components/UI/CreateContentModal'
import { useEffect, useState } from 'react'
import { Sidebar } from '../components/UI/Sidebar'
import { useContent } from '../hooks/useContent'
import axios from 'axios'
import { BACKEND_URL } from '../config'

function Dashboard() {
  const [modal, setModal] = useState(false);
  const [selectedType, setSelectedType] = useState<"twitter" | "youtube" | "document" | null>(null);
  const { contents, refresh } = useContent();

  useEffect(() => {
    refresh()
  }, [modal])

  const filteredContents = selectedType 
    ? contents.filter(content => content.type === selectedType)
    : contents;

  return (
    <div className='w-full h-full absolute'>
      <div>
        <Sidebar selectedType={selectedType} onTypeSelect={setSelectedType} />
      </div>
      <div>
        <CreateContentModal open={modal} onClose={() => {
          setModal(false);
        }} />
        <div className='h-screen w-screen bg-gradient-to-bl from-[#A4A7FF] via-[#BABBD7] via-[#E2E3FF] via-[#BABBD7] to-[#A4A7FF]'>
          <div className='flex justify-end mr-1.5 p-2'>
            <div className='mt-1.5'>
              <Button variant='secondary' size="md" text="Share Brain" onClick={async () => {
                const response = await axios.post(`${BACKEND_URL}/api/v1/brain/share`, {
                  share: true
                }, {
                  headers: {
                    "Authorization": localStorage.getItem("token")
                  }
                })
                const shareurl = `http://localhost:5173/share/${response.data.hash}`
                alert(shareurl);
              }} startIcon={<ShareIcon size="md" />} />
            </div>
            <div className='mt-1.5'>
              <Button variant='primary' size="md" text="Add Content" onClick={() => {
                setModal(true);
              }} startIcon={<PlusIcon size="md" />} />
            </div>
          </div>

          <div className='flex gap-4 p-4 ml-72 flex-wrap max-h-min'>
            {filteredContents.map((content) => (
              <CardComponent
                key={content._id}
                id={content._id}
                type={content.type}
                link={content.link}
                title={content.title}
              />
            ))}
          </div>
        </div>
      </div>
    </div>
  )
}

export default Dashboard

